buildscript {
  repositories {
    google()
    mavenCentral()
    gradlePluginPortal()
    maven { url 'https://s01.oss.sonatype.org' }
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:8.7.3'
    classpath "org.springframework.boot:spring-boot-gradle-plugin:3.1.4"
    classpath "io.spring.gradle:dependency-management-plugin:1.1.3"
  }
}

allprojects {
  apply plugin: 'eclipse'
  apply plugin: 'idea'

  idea {
    module {
      outputDir file('build/classes/java/main')
      testOutputDir file('build/classes/java/test')
    }
  }
}

configure(subprojects - project(':android')) {
  apply plugin: 'java-library'
  sourceCompatibility = 17

  sourceSets {
    main {
      resources {
        exclude("**/*.png", "**/*.jpg", "**/*.jpeg",
          "**/*.mp3", "**/*.wav", "**/*.ogg")
      }
    }
  }

  tasks.register('generateAssetList') {
    doLast {
      File assetsFolder = new File("${project.rootDir}/assets/")
      File assetsFile = new File(assetsFolder, "assets.txt")
      assetsFile.text = '' // Clear file first
      fileTree(assetsFolder).visit { FileVisitDetails details ->
        if (!details.directory) {
          assetsFile.append(details.relativePath.toString() + "\n")
        }
      }
    }
  }
  processResources.dependsOn 'generateAssetList'

  compileJava {
    options.incremental = true
  }
}

subprojects {
  version = '1.0'
  ext.appName = 'MineMon'
  configurations.configureEach {
    exclude group: 'ch.qos.logback', module: 'logback-classic'
    exclude group: 'org.springframework', module: 'spring-jcl'
  }
  
  repositories {
    google()
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
  }

}

eclipse.project.name = 'MineMon-parent'
