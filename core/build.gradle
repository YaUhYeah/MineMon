plugins {
  id 'java-library'
  id 'io.freefair.lombok' version '8.3'
}

def gdxVersion = "1.13.0"
def graalHelperVersion = "0.1.0"
def enableGraalNative = 'false'
def springVersion = "3.1.4"

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}


dependencies {
  // LibGDX Core - Use api so Android module can access
  api "com.badlogicgames.gdx:gdx:$gdxVersion"

  // Networking - Implementation since it's internal to core
  implementation "com.esotericsoftware:kryonet:2.22.0-RC1"

  // Database - Keep as implementation
  implementation 'com.h2database:h2:2.2.224'

  // Spring Core - Keep as implementation to not leak to Android
  implementation("org.springframework:spring-core:$springVersion") {
    exclude group: 'org.springframework', module: 'spring-jcl'
  }
  implementation("org.springframework:spring-context:$springVersion") {
    exclude group: 'org.springframework', module: 'spring-jcl'
  }
  implementation("org.springframework:spring-beans:$springVersion") {
    exclude group: 'org.springframework', module: 'spring-jcl'
  }
  implementation("org.springframework.boot:spring-boot-autoconfigure:$springVersion") {
    exclude group: 'org.springframework', module: 'spring-jcl'
  }

  // Logging - Make API so Android can use it
  api "org.slf4j:slf4j-api:2.0.9"
  api "org.slf4j:jcl-over-slf4j:2.0.9"  // Bridge for Spring logging
  implementation "ch.qos.logback:logback-classic:1.4.11"

  // JPA - Implementation since it's only used in core
  implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springVersion"

  // Annotations - Make API so Android can use them
  api "jakarta.annotation:jakarta.annotation-api:2.1.1"

  // Lombok - API since we use it across modules
  api "org.projectlombok:lombok:1.18.30"
  annotationProcessor "org.projectlombok:lombok:1.18.30"

  // Configuration Processor
  annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:$springVersion"

  if (enableGraalNative == 'true') {
    implementation "io.github.berstanio:gdx-svmhelper-annotations:$graalHelperVersion"
  }
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}
