plugins {
  id 'java-library'
  // Lombok plugin if you use Lombok
  id 'io.freefair.lombok' version '8.3'
  // You do *not* need to apply the Spring Boot plugin here; just the dependencies are enough.
}

def gdxVersion = "1.13.0"
def graalHelperVersion = "0.1.0"
def enableGraalNative = 'false'

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

repositories {
  mavenCentral()
}

dependencies {
  // --- LibGDX core and networking
  api "com.badlogicgames.gdx:gdx:$gdxVersion"
  implementation "com.esotericsoftware:kryonet:2.22.0-RC1"
  implementation 'com.h2database:h2:2.2.224'

  // --- Basic Spring (Context, Beans, Boot, Logging, etc.)
  implementation "org.springframework.boot:spring-boot-starter:3.1.4"

  // --- Spring Data JPA for @Entity, @Table, @Id, JpaRepository
  implementation "org.springframework.boot:spring-boot-starter-data-jpa:3.1.4"

  // If you only need the JPA API itself (rare, because spring-boot-starter-data-jpa includes it):
  // implementation "jakarta.persistence:jakarta.persistence-api:3.1.0"

  // --- For bcrypt hashing in AuthService
  // This is included by spring-boot-starter-security, but if you want only crypto:
  // implementation "org.springframework.security:spring-security-crypto:6.1.4"
  // OR full security (often needed):

  // --- If you use @ConfigurationProperties
  annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:3.1.4"

  // --- For @PostConstruct (Jakarta Annotations)
  implementation "jakarta.annotation:jakarta.annotation-api:2.1.1"

  // If building with Graal:
  if (enableGraalNative == 'true') {
    implementation "io.github.berstanio:gdx-svmhelper-annotations:$graalHelperVersion"
  }
}

tasks.compileJava {
  options.encoding = 'UTF-8'
}
tasks.compileTestJava {
  options.encoding = 'UTF-8'
}
