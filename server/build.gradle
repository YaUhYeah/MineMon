plugins {
  id 'java'
  id 'io.freefair.lombok' version '8.3'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '7.1.2'

}

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

application {
  mainClass = 'io.github.minemon.server.ServerLauncher'
}

dependencies {
  // The local project reference:
  implementation project(':core')
  implementation "org.springframework.boot:spring-boot-starter-security:3.1.4"
  implementation "org.springframework.boot:spring-boot-starter-data-jpa:3.1.4"
  implementation 'org.springframework.boot:spring-boot-starter-web:3.1.4'

  implementation 'com.h2database:h2:2.2.224'
  implementation 'org.slf4j:slf4j-api:1.7.36'
  runtimeOnly 'ch.qos.logback:logback-classic:1.2.11'
  implementation 'com.esotericsoftware:kryonet:2.22.0-RC1'
  implementation project(path: ':lwjgl3')
  implementation 'org.projectlombok:lombok:1.18.34'
}
repositories {
  mavenCentral()
  // Print them out for debugging
  println "Server project repos: " + repositories*.name
}
sourceSets {
  main {
    java {
      srcDirs = ['src']
      exclude 'io/github/minemon/world/service/impl/Client**'
    }
  }
}
tasks.named('build') {
  dependsOn shadowJar
}

shadowJar {
  archiveFileName = "pokemeetup-0.0.1-SNAPSHOT-server.jar"

  exclude {
    // Force forward slashes:
    def path = it.path.replace('\\','/')
    // Return true if we want to exclude
    return path.contains('/assets/')      ||
      path.contains('/Textures/')    ||
      path.endsWith('.png')          ||
      path.endsWith('.ogg')          ||
      path.endsWith('.mp3')          ||
      path.endsWith('.wav')
  }
}

jar {
  archiveBaseName.set("MineMon")
  duplicatesStrategy DuplicatesStrategy.EXCLUDE
  manifest {
    attributes 'Main-Class': application.mainClass
  }
}
